#!/bin/bash -x

# Send output to log file and serial console
mkdir -p  /var/log/cloud /config/cloud /var/lib/cloud/icontrollx_installs /var/config/rest/downloads
LOG_FILE=/var/log/cloud/startup-script.log
[[ ! -f $LOG_FILE ]] && touch $LOG_FILE || { echo "Run Only Once. Exiting"; exit; }
npipe=/tmp/$$.tmp
trap "rm -f $npipe" EXIT
mknod $npipe p
tee <$npipe -a $LOG_FILE /dev/ttyS0 &
exec 1>&-
exec 1>$npipe
exec 2>&1

# Download or Render BIG-IP Runtime Init Config 
cat << 'EOF' > /config/cloud/runtime-init.conf
pre_onboard_enabled:
  - name: provision_rest
    type: inline
    commands:
      - /usr/bin/setdb provision.extramb 500
      - /usr/bin/setdb restjavad.useextramb true
      - /usr/bin/setdb setup.run false
bigip_ready_enabled: []
extension_packages:
    install_operations:
        - extensionType: do
          extensionVersion: 1.8.0
          extensionUrl: https://github.com/F5Networks/f5-declarative-onboarding/releases/download/v1.8.0/f5-declarative-onboarding-1.8.0-2.noarch.rpm
        - extensionType: as3
          extensionVersion: 3.14.0
          extensionUrl: https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.14.0/f5-appsvcs-3.14.0-4.noarch.rpm
        - extensionType: ts
          extensionVersion: 1.8.0
          extensionUrl: https://github.com/F5Networks/f5-telemetry-streaming/releases/download/v1.8.0/f5-telemetry-1.8.0-1.noarch.rpm
extension_services:
  service_operations:
  - extensionType: do
    type: inline
    value:
      Common:
        class: Tenant      
        mySystem:
          class: System
          hostname: "{{ HOST_NAME }}"
        myDns:
          class: DNS
          nameServers:
          - 8.8.8.8
        myNtp:
          class: NTP
          servers:
          - 0.pool.ntp.org
          timezone: UTC
        myProvisioning:
          asm: nominal
          class: Provision
          ltm: nominal
        dbvars:
          class: DbVariables
          provision.extramb: 500
          restjavad.useextramb: true
          ui.advisory.enabled: true
          ui.advisory.color: blue
          ui.advisory.text: "Provisioned via DO"
      async: true
      class: Device
      label: myBIG-IPdeclarationfordeclarativeonboarding
      schemaVersion: 1.0.0
  - extensionType: as3
    type: inline
    value:
      remark: ASM_VS1
      schemaVersion: 3.0.0
      label: ASM_VS1
      class: ADC
      Tenant_1:
        class: Tenant
        Shared:
          class: Application
          template: shared
          shared_pool:
            class: Pool
            remark: Service 1 shared pool
            monitors:
            - http
            members:
            - servicePort: 80
              addressDiscovery: aws
              region: '{{{ REGION }}}'
              updateInterval: 20
              tagKey: Application
              tagValue: appAutoscaleGroup
              addressRealm: private
        HTTP_Service:
          template: http
          class: Application
          serviceMain:
            class: Service_HTTP
            virtualAddresses:
            - 0.0.0.0
            snat: auto
            policyWAF:
              use: WAFPolicy
            pool: "/Tenant_1/Shared/shared_pool"
          WAFPolicy:
            ignoreChanges: true
            url: https://raw.githubusercontent.com/f5devcentral/f5-asm-policy-templates/master/generic_ready_template/Rapid_Depolyment_Policy_13_1.xml
            class: WAF_Policy
        HTTPS_Service:
          template: https
          class: Application
          serviceMain:
            virtualAddresses:
            - 0.0.0.0
            snat: auto
            policyWAF:
              use: WAFPolicy
            pool: "/Tenant_1/Shared/shared_pool"
            serverTLS:
              bigip: "/Common/clientssl"
            redirect80: false
            class: Service_HTTPS
          WAFPolicy:
            ignoreChanges: true
            url: https://raw.githubusercontent.com/f5devcentral/f5-asm-policy-templates/master/generic_ready_template/Rapid_Depolyment_Policy_13_1.xml
            class: WAF_Policy
  - extensionType: ts
    type: inline
    value:
      class: Telemetry
      My_System:
        class: Telemetry_System
        systemPoller:
          interval: 60
      My_Listener:
        class: Telemetry_Listener
        port: 6514
post_onboard_enabled: []
runtime_parameters:
  - name: HOST_NAME
    type: url
    value: http://169.254.169.254/latest/meta-data/hostname
  - name: REGION
    type: url
    value: http://169.254.169.254/latest/dynamic/instance-identity/document
    query: region
EOF

### runcmd:
# Download RUNTIME_INIT Package
PACKAGE_URL='${RI_URL}'
for i in {1..30}; do
    curl -fv --retry 1 --connect-timeout 5 -L "$${PACKAGE_URL}" -o "/var/config/rest/downloads/$${PACKAGE_URL##*/}" && break || sleep 10
done
# Install
bash /var/config/rest/downloads/$${PACKAGE_URL##*/} -- '--cloud aws'
# Run
f5-bigip-runtime-init --config-file /config/cloud/runtime-init.conf
